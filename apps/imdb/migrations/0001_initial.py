# Generated by Django 5.1.4 on 2025-01-31 21:21
from django.core.management import call_command
from django.db import migrations, models


def load_fixture(*fixtures: str, app_label: str = None):
    def call_loaddata(apps, schema_editor):
        try:
            call_command('loaddata', *fixtures, app_label=app_label)
        except Exception:
            from django.db import connection
            from pprint import pprint
            pprint(connection.queries)
            raise

    return call_loaddata


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.IntegerField(choices=[(1, 'Action'), (2, 'Adult'), (3, 'Adventure'), (4, 'Animation'), (5, 'Biography'), (6, 'Comedy'), (7, 'Crime'), (8, 'Documentary'), (9, 'Drama'), (10, 'Family'), (11, 'Fantasy'), (12, 'Film-Noir'), (13, 'Game-Show'), (14, 'History'), (15, 'Horror'), (16, 'Music'), (17, 'Musical'), (18, 'Mystery'), (19, 'News'), (20, 'Reality-TV'), (21, 'Romance'), (22, 'Sci-Fi'), (23, 'Short'), (24, 'Sport'), (25, 'Talk-Show'), (26, 'Thriller'), (27, 'War'), (28, 'Western')], primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MovieType',
            fields=[
                ('id', models.IntegerField(choices=[(0, 'no_type'), (1, 'movie'), (2, 'short'), (3, 'video'), (4, 'videoGame'), (5, 'tvShort'), (6, 'tvMovie'), (7, 'tvEpisode'), (8, 'tvSeries'), (9, 'tvMiniSeries'), (10, 'tvSpecial'), (11, 'tvPilot')], primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.IntegerField(choices=[(1, 'accountant'), (2, 'actor'), (3, 'actress'), (4, 'animation_department'), (5, 'archive_footage'), (6, 'archive_sound'), (7, 'art_department'), (8, 'art_director'), (9, 'assistant'), (10, 'assistant_director'), (11, 'camera_department'), (12, 'casting_department'), (13, 'casting_director'), (14, 'choreographer'), (15, 'cinematographer'), (16, 'composer'), (17, 'costume_department'), (18, 'costume_designer'), (19, 'director'), (20, 'editor'), (21, 'editorial_department'), (22, 'electrical_department'), (23, 'executive'), (24, 'legal'), (25, 'location_management'), (26, 'make_up_department'), (27, 'manager'), (28, 'miscellaneous'), (29, 'music_artist'), (30, 'music_department'), (31, 'podcaster'), (32, 'producer'), (33, 'production_department'), (34, 'production_designer'), (35, 'production_manager'), (36, 'publicist'), (37, 'script_department'), (38, 'set_decorator'), (39, 'sound_department'), (40, 'soundtrack'), (41, 'special_effects'), (42, 'stunts'), (43, 'talent_agent'), (44, 'transportation_department'), (45, 'visual_effects'), (46, 'writer')], primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=32, unique=True)),
                ('title', models.CharField(max_length=256)),
            ],
        ),
        migrations.RunPython(
            load_fixture(
                'genres.json',
                'movie_types.json',
                'professions.json',
                app_label='imdb',
            ),
            migrations.RunPython.noop,
        )
    ]
